{
  "$schema": "https://biomejs.dev/schemas/1.9.4/schema.json",
  "css": {
    "formatter": {
      "enabled": true,
      "indentStyle": "space",
      "indentWidth": 2,
      "lineEnding": "lf",
      "lineWidth": 120,
      "quoteStyle": "double"
    },
    "linter": {
      "enabled": true
    },
    "parser": {
      "cssModules": false
    }
  },
  "extends": [],
  "files": {
    "ignore": [
      ".history/**/*",
      ".vscode/**/*",
      "dist/**/*",
      "node_modules/**/*"
    ],
    "ignoreUnknown": false,
    "include": [
      "**/*.css",
      "**/*.js",
      "**/*.json",
      "**/*.jsx",
      "**/*.scss",
      "**/*.ts",
      "**/*.tsx",
      "**/*.vue"
    ],
    "maxSize": 1048576
  },
  "formatter": {
    "attributePosition": "auto",
    "bracketSpacing": true,
    "enabled": true,
    "formatWithErrors": false,
    "ignore": [],
    "indentStyle": "space",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 80,
    "useEditorconfig": true
  },
  "javascript": {
    "formatter": {
      "arrowParentheses": "asNeeded",
      "attributePosition": "auto",
      "bracketSameLine": false,
      "bracketSpacing": true,
      "enabled": true,
      "indentStyle": "space",
      "indentWidth": 2,
      "jsxQuoteStyle": "double",
      "lineEnding": "lf",
      "lineWidth": 120,
      "quoteProperties": "asNeeded",
      "quoteStyle": "single",
      "semicolons": "asNeeded",
      "trailingCommas": "all"
    },
    "globals": [],
    "jsxRuntime": "transparent",
    "linter": {
      "enabled": true
    },
    "parser": {
      "unsafeParameterDecoratorsEnabled": false
    }
  },
  "json": {
    "formatter": {
      "enabled": true,
      "indentStyle": "space",
      "indentWidth": 2,
      "lineEnding": "lf",
      "lineWidth": 80,
      "trailingCommas": "none"
    },
    "linter": {
      "enabled": true
    },
    "parser": {
      "allowComments": false,
      "allowTrailingCommas": false
    }
  },
  "linter": {
    "enabled": true,
    "ignore": [],
    "rules": {
      "complexity": {
        "noExtraBooleanCast": "error",
        "noMultipleSpacesInRegularExpressionLiterals": "error",
        "noUselessCatch": "error",
        "noWith": "error"
      },
      "correctness": {
        "noConstantCondition": "error",
        "noConstAssign": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInvalidBuiltinInstantiation": "error",
        "noInvalidConstructorSuper": "error",
        "noNonoctalDecimalEscape": "error",
        "noPrecisionLoss": "error",
        "noSelfAssign": "error",
        "noSetterReturn": "error",
        "noSwitchDeclarations": "error",
        "noUndeclaredVariables": "error",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedLabels": "error",
        "noUnusedPrivateClassMembers": "error",
        "noUnusedVariables": "error",
        "useIsNan": "error",
        "useValidForDirection": "error",
        "useYield": "error"
      },
      "recommended": false,
      "style": {
        "useBlockStatements": "off"
      },
      "suspicious": {
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCompareNegZero": "error",
        "noConsole": "off",
        "noControlCharactersInRegex": "error",
        "noDebugger": "off",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImportAssign": "error",
        "noMisleadingCharacterClass": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noShadowRestrictedNames": "error",
        "noSparseArray": "error",
        "noUnsafeNegation": "error",
        "useGetterReturn": "error",
        "useValidTypeof": "error"
      }
    }
  },
  "organizeImports": {
    "enabled": true,
    "ignore": []
  },
  "overrides": [],
  "vcs": {
    "clientKind": "git",
    "enabled": false,
    "useIgnoreFile": false
  }
}
